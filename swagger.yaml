# URI : chemin de la requette 
#  header : en tete de la requete :  authaurisation : token 
# body : element a inserer dans la bdd : obligatoire pour POST ET PUT 
# path parametre : parametres de recherche ou filtrage ou de tri 

# ENDPOINT POUR SE CONNECTER 
# http://localhost:3001/api/v1/user/login  : post

# ENDPOINT POUR S'INSCRIRE
# http://localhost:3001/api/v1/user/signup  : post 


# ENDPOINT POUR LA PAGE PROFILE DU USER UNE FOIS CONNECTE
# http://localhost:3001/api/v1/user/profile/   :  post et put

# ENDPOINT POUR LES  TRANSACTIONS D UN USER  DU MOIS 
# http://localhost:3001/api/v1/user/profile/transactions/    : post 


# ENDPOINT POUR LE DETAILS DES TRANSACTIONS D UN USER 
# http://localhost:3001/api/v1/user/profile/transactions/{transactionId}    post , put , patch , delete 



# ####### JE N'AI PAS INTEGRER LES ENDPOINTS SUIVANT MAIS ON PEUT IMAGINER AVEC DES PARAMETRE POUR FILTRAGE OU RECHERCHE ############=

# UTILISER UN PARAMETRE POUR RECHERCHER  PAR EXEMPLE PAR DATE ET TYPE
# http://localhost:3001/api/v1/user/profile/transactions?date=2023-07-22&type=electronic

# UTILISER DES PARAMETRE POUR  FILTRER LES TRANSACTIONS ENTRE 2 MONTANT PAR EXEMPLE
# http://localhost:3001/api/v1/user/profile/transactions?minAmount=200&maxAmount=600


# 200 reponse succes serveur
# 301  redirection 
# 400 erreur requete : 401 : non authorized (non authentifié :token)  , 403 : requete refusé (si vpn    , 404 : erreur chemin de la requete)
# 500 erreur serveur


swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get user transactions for the month
      description: API for fetching user transactions for the current month
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionSummary'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /user/profile/transactions/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: API for fetching the details of a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string  # Ajout du type
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction
      description: API for updating a transaction's category and note
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string  # Ajout du type
        - in: body
          name: body
          description: Updated transaction details
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Partially update transaction
      description: API for partially updating a transaction's category or note
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string  # Ajout du type
        - in: body
          name: body
          description: Partially updated transaction details
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction partially updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete transaction
      description: API for deleting a transaction's category or note
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string  # Ajout du type
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string  # Ajout du type
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionSummary:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
  TransactionDetails:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      type:
        type: string
      balance:
        type: number
      category:
        type: string
      note:
        type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      note:
        type: string

